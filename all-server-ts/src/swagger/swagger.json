{
  "openapi": "3.0.3",
  "info": {
    "title": "R2S Backend API",
    "version": "1.0.0",
    "description": "Reserve-to-Save LINE Mini dApp Backend API",
    "contact": {
      "name": "R2S Support",
      "email": "support@r2s.io"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Development server"
    },
    {
      "url": "https://api.r2s.io",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Campaigns",
      "description": "Campaign management"
    },
    {
      "name": "Payments",
      "description": "Payment processing"
    },
    {
      "name": "Participations",
      "description": "User participations in campaigns"
    },
    {
      "name": "Users",
      "description": "User profile management"
    }
  ],
  "paths": {
    "/api/auth/nonce": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get authentication nonce",
        "description": "Generate a nonce for wallet signature authentication",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$"
            },
            "description": "Ethereum wallet address"
          },
          {
            "name": "chainId",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "1001"
            },
            "description": "Blockchain chain ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Nonce generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid wallet address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify signature and login",
        "description": "Verify wallet signature and issue JWT tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySignatureRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid signature or nonce",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/line": {
      "post": {
        "tags": ["Authentication"],
        "summary": "LINE authentication",
        "description": "Authenticate using LINE credentials",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LINE authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineAuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid LINE tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "description": "Get new access token using refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout",
        "description": "Invalidate current session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/campaigns": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "List campaigns",
        "description": "Get list of campaigns with filtering and pagination",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["draft", "recruiting", "reached", "fulfillment", "settled", "failed", "cancelled"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaigns retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Campaigns"],
        "summary": "Create campaign",
        "description": "Create a new campaign",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campaign created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          }
        }
      }
    },
    "/api/campaigns/{id}": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Get campaign details",
        "description": "Get detailed information about a specific campaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "404": {
            "description": "Campaign not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/create": {
      "post": {
        "tags": ["Payments"],
        "summary": "Create payment",
        "description": "Initialize a payment for campaign participation",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/{paymentId}/status": {
      "get": {
        "tags": ["Payments"],
        "summary": "Get payment status",
        "description": "Check the status of a payment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/participations/my": {
      "get": {
        "tags": ["Participations"],
        "summary": "Get my participations",
        "description": "Get list of user's campaign participations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Participations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParticipationListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user profile",
        "description": "Get current user's profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user profile",
        "description": "Update current user's profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "NonceResponse": {
        "type": "object",
        "properties": {
          "nonce": {
            "type": "string",
            "example": "a1b2c3d4e5f6789012345678901234567"
          },
          "message": {
            "type": "string",
            "example": "Sign this message to authenticate with R2S"
          },
          "requestId": {
            "type": "string",
            "format": "uuid"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VerifySignatureRequest": {
        "type": "object",
        "required": ["address", "signature", "message", "requestId"],
        "properties": {
          "address": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "signature": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "address": {
                "type": "string"
              },
              "kycTier": {
                "type": "integer",
                "minimum": 0,
                "maximum": 3
              },
              "lineConnected": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "LineAuthRequest": {
        "type": "object",
        "required": ["idToken", "accessToken"],
        "properties": {
          "idToken": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          }
        }
      },
      "LineAuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "lineUserId": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "pictureUrl": {
                "type": "string",
                "format": "uri"
              },
              "walletConnected": {
                "type": "boolean"
              },
              "kycTier": {
                "type": "integer"
              }
            }
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "accessToken": {
            "type": "string"
          }
        }
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "chainAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri"
          },
          "merchantWallet": {
            "type": "string"
          },
          "basePrice": {
            "type": "string"
          },
          "minQty": {
            "type": "integer"
          },
          "currentQty": {
            "type": "integer"
          },
          "targetAmount": {
            "type": "string"
          },
          "currentAmount": {
            "type": "string"
          },
          "discountRate": {
            "type": "integer"
          },
          "saveFloorBps": {
            "type": "integer"
          },
          "rMaxBps": {
            "type": "integer"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "recruiting", "reached", "fulfillment", "settled", "failed", "cancelled"]
          },
          "progress": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "CampaignListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "pages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "CreateCampaignRequest": {
        "type": "object",
        "required": ["title", "basePrice", "minQty", "targetAmount", "discountRate", "startTime", "endTime"],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri"
          },
          "basePrice": {
            "type": "string"
          },
          "minQty": {
            "type": "integer"
          },
          "targetAmount": {
            "type": "string"
          },
          "discountRate": {
            "type": "integer"
          },
          "saveFloorBps": {
            "type": "integer"
          },
          "rMaxBps": {
            "type": "integer"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreatePaymentRequest": {
        "type": "object",
        "required": ["campaignId", "amount", "currency", "mode"],
        "properties": {
          "campaignId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "enum": ["USDT", "KAIA", "KRW", "USD"]
          },
          "mode": {
            "type": "string",
            "enum": ["crypto", "stripe"]
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "type": "string"
              },
              "paymentUrl": {
                "type": "string",
                "format": "uri"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              },
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        }
      },
      "PaymentStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "paymentId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": ["pending", "processing", "completed", "failed", "refunded"]
              },
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "completedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "ParticipationListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "campaign": {
                  "$ref": "#/components/schemas/Campaign"
                },
                "depositAmount": {
                  "type": "string"
                },
                "expectedRebate": {
                  "type": "string"
                },
                "actualRebate": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": ["active", "pending_cancel", "cancelled", "settled", "refunded"]
                },
                "joinedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "walletAddress": {
            "type": "string"
          },
          "lineUserId": {
            "type": "string"
          },
          "lineDisplayName": {
            "type": "string"
          },
          "linePictureUrl": {
            "type": "string",
            "format": "uri"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "kycTier": {
            "type": "integer",
            "minimum": 0,
            "maximum": 3
          },
          "status": {
            "type": "string",
            "enum": ["active", "suspended", "deleted"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "lineDisplayName": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}